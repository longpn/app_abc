//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dicho.DatabaseInteract
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DichoDataContext : DbContext
    {
        public DichoDataContext()
            : base("name=DichoDataContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<proc_ClientAppInfor_GetAllToken_Result> proc_ClientAppInfor_GetAllToken()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ClientAppInfor_GetAllToken_Result>("proc_ClientAppInfor_GetAllToken");
        }
    
        public virtual ObjectResult<string> proc_ClientAppInfor_Insert(Nullable<long> userID, string deviceFirmwareID, string clientAppID, string token)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var deviceFirmwareIDParameter = deviceFirmwareID != null ?
                new ObjectParameter("DeviceFirmwareID", deviceFirmwareID) :
                new ObjectParameter("DeviceFirmwareID", typeof(string));
    
            var clientAppIDParameter = clientAppID != null ?
                new ObjectParameter("ClientAppID", clientAppID) :
                new ObjectParameter("ClientAppID", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_ClientAppInfor_Insert", userIDParameter, deviceFirmwareIDParameter, clientAppIDParameter, tokenParameter);
        }
    
        public virtual int proc_ApiLog_Insert(Nullable<long> userID, string apiName, string apiVersion, string iPAddress, string platform, string userAgent, string clientAppVersion, Nullable<int> httpStatusCode, Nullable<int> contentLength, Nullable<int> takenTime)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var apiNameParameter = apiName != null ?
                new ObjectParameter("ApiName", apiName) :
                new ObjectParameter("ApiName", typeof(string));
    
            var apiVersionParameter = apiVersion != null ?
                new ObjectParameter("ApiVersion", apiVersion) :
                new ObjectParameter("ApiVersion", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            var clientAppVersionParameter = clientAppVersion != null ?
                new ObjectParameter("ClientAppVersion", clientAppVersion) :
                new ObjectParameter("ClientAppVersion", typeof(string));
    
            var httpStatusCodeParameter = httpStatusCode.HasValue ?
                new ObjectParameter("HttpStatusCode", httpStatusCode) :
                new ObjectParameter("HttpStatusCode", typeof(int));
    
            var contentLengthParameter = contentLength.HasValue ?
                new ObjectParameter("ContentLength", contentLength) :
                new ObjectParameter("ContentLength", typeof(int));
    
            var takenTimeParameter = takenTime.HasValue ?
                new ObjectParameter("TakenTime", takenTime) :
                new ObjectParameter("TakenTime", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ApiLog_Insert", userIDParameter, apiNameParameter, apiVersionParameter, iPAddressParameter, platformParameter, userAgentParameter, clientAppVersionParameter, httpStatusCodeParameter, contentLengthParameter, takenTimeParameter);
        }
    
        public virtual ObjectResult<string> proc_ClientError_Insert(Nullable<long> userID, string errorMessage, string platform)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_ClientError_Insert", userIDParameter, errorMessageParameter, platformParameter);
        }
    
        public virtual int proc_ServerError_Insert(Nullable<long> userID, string apiName, string uri, string platform, string errorMessage, Nullable<int> statusCode, string clientAppVersion)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var apiNameParameter = apiName != null ?
                new ObjectParameter("ApiName", apiName) :
                new ObjectParameter("ApiName", typeof(string));
    
            var uriParameter = uri != null ?
                new ObjectParameter("Uri", uri) :
                new ObjectParameter("Uri", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(string));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var clientAppVersionParameter = clientAppVersion != null ?
                new ObjectParameter("ClientAppVersion", clientAppVersion) :
                new ObjectParameter("ClientAppVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ServerError_Insert", userIDParameter, apiNameParameter, uriParameter, platformParameter, errorMessageParameter, statusCodeParameter, clientAppVersionParameter);
        }
    }
}
